// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pd/fight/fight.proto

package fight

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Type int32

const (
	Type_FIGHT   Type = 0
	Type_ARCHIVE Type = 1
	Type_LEVEL   Type = 2
	Type_QUIT    Type = 3
)

var Type_name = map[int32]string{
	0: "FIGHT",
	1: "ARCHIVE",
	2: "LEVEL",
	3: "QUIT",
}

var Type_value = map[string]int32{
	"FIGHT":   0,
	"ARCHIVE": 1,
	"LEVEL":   2,
	"QUIT":    3,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{0}
}

type AdminRequest_Type int32

const (
	AdminRequest_CREATE_HERO AdminRequest_Type = 0
	AdminRequest_ADJUST_HERO AdminRequest_Type = 1
)

var AdminRequest_Type_name = map[int32]string{
	0: "CREATE_HERO",
	1: "ADJUST_HERO",
}

var AdminRequest_Type_value = map[string]int32{
	"CREATE_HERO": 0,
	"ADJUST_HERO": 1,
}

func (x AdminRequest_Type) String() string {
	return proto.EnumName(AdminRequest_Type_name, int32(x))
}

func (AdminRequest_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{2, 0}
}

type ClearSessionRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearSessionRequest) Reset()         { *m = ClearSessionRequest{} }
func (m *ClearSessionRequest) String() string { return proto.CompactTextString(m) }
func (*ClearSessionRequest) ProtoMessage()    {}
func (*ClearSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{0}
}

func (m *ClearSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearSessionRequest.Unmarshal(m, b)
}
func (m *ClearSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearSessionRequest.Marshal(b, m, deterministic)
}
func (m *ClearSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearSessionRequest.Merge(m, src)
}
func (m *ClearSessionRequest) XXX_Size() int {
	return xxx_messageInfo_ClearSessionRequest.Size(m)
}
func (m *ClearSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClearSessionRequest proto.InternalMessageInfo

func (m *ClearSessionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ClearSessionResponse struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearSessionResponse) Reset()         { *m = ClearSessionResponse{} }
func (m *ClearSessionResponse) String() string { return proto.CompactTextString(m) }
func (*ClearSessionResponse) ProtoMessage()    {}
func (*ClearSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{1}
}

func (m *ClearSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearSessionResponse.Unmarshal(m, b)
}
func (m *ClearSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearSessionResponse.Marshal(b, m, deterministic)
}
func (m *ClearSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearSessionResponse.Merge(m, src)
}
func (m *ClearSessionResponse) XXX_Size() int {
	return xxx_messageInfo_ClearSessionResponse.Size(m)
}
func (m *ClearSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearSessionResponse proto.InternalMessageInfo

func (m *ClearSessionResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type AdminRequest struct {
	Heros                []*Hero           `protobuf:"bytes,1,rep,name=heros,proto3" json:"heros,omitempty"`
	Type                 AdminRequest_Type `protobuf:"varint,2,opt,name=type,proto3,enum=fight.AdminRequest_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AdminRequest) Reset()         { *m = AdminRequest{} }
func (m *AdminRequest) String() string { return proto.CompactTextString(m) }
func (*AdminRequest) ProtoMessage()    {}
func (*AdminRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{2}
}

func (m *AdminRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminRequest.Unmarshal(m, b)
}
func (m *AdminRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminRequest.Marshal(b, m, deterministic)
}
func (m *AdminRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminRequest.Merge(m, src)
}
func (m *AdminRequest) XXX_Size() int {
	return xxx_messageInfo_AdminRequest.Size(m)
}
func (m *AdminRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AdminRequest proto.InternalMessageInfo

func (m *AdminRequest) GetHeros() []*Hero {
	if m != nil {
		return m.Heros
	}
	return nil
}

func (m *AdminRequest) GetType() AdminRequest_Type {
	if m != nil {
		return m.Type
	}
	return AdminRequest_CREATE_HERO
}

type AdminResponse struct {
	Heros                []*Hero  `protobuf:"bytes,1,rep,name=heros,proto3" json:"heros,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AdminResponse) Reset()         { *m = AdminResponse{} }
func (m *AdminResponse) String() string { return proto.CompactTextString(m) }
func (*AdminResponse) ProtoMessage()    {}
func (*AdminResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{3}
}

func (m *AdminResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdminResponse.Unmarshal(m, b)
}
func (m *AdminResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdminResponse.Marshal(b, m, deterministic)
}
func (m *AdminResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdminResponse.Merge(m, src)
}
func (m *AdminResponse) XXX_Size() int {
	return xxx_messageInfo_AdminResponse.Size(m)
}
func (m *AdminResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AdminResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AdminResponse proto.InternalMessageInfo

func (m *AdminResponse) GetHeros() []*Hero {
	if m != nil {
		return m.Heros
	}
	return nil
}

type Top10Request struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Top10Request) Reset()         { *m = Top10Request{} }
func (m *Top10Request) String() string { return proto.CompactTextString(m) }
func (*Top10Request) ProtoMessage()    {}
func (*Top10Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{4}
}

func (m *Top10Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Top10Request.Unmarshal(m, b)
}
func (m *Top10Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Top10Request.Marshal(b, m, deterministic)
}
func (m *Top10Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Top10Request.Merge(m, src)
}
func (m *Top10Request) XXX_Size() int {
	return xxx_messageInfo_Top10Request.Size(m)
}
func (m *Top10Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Top10Request.DiscardUnknown(m)
}

var xxx_messageInfo_Top10Request proto.InternalMessageInfo

type Top10Response struct {
	Players              []*Top10Response_Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Top10Response) Reset()         { *m = Top10Response{} }
func (m *Top10Response) String() string { return proto.CompactTextString(m) }
func (*Top10Response) ProtoMessage()    {}
func (*Top10Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{5}
}

func (m *Top10Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Top10Response.Unmarshal(m, b)
}
func (m *Top10Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Top10Response.Marshal(b, m, deterministic)
}
func (m *Top10Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Top10Response.Merge(m, src)
}
func (m *Top10Response) XXX_Size() int {
	return xxx_messageInfo_Top10Response.Size(m)
}
func (m *Top10Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Top10Response.DiscardUnknown(m)
}

var xxx_messageInfo_Top10Response proto.InternalMessageInfo

func (m *Top10Response) GetPlayers() []*Top10Response_Player {
	if m != nil {
		return m.Players
	}
	return nil
}

type Top10Response_Player struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score                int32    `protobuf:"varint,2,opt,name=score,proto3" json:"score,omitempty"`
	Level                int32    `protobuf:"varint,3,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Top10Response_Player) Reset()         { *m = Top10Response_Player{} }
func (m *Top10Response_Player) String() string { return proto.CompactTextString(m) }
func (*Top10Response_Player) ProtoMessage()    {}
func (*Top10Response_Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{5, 0}
}

func (m *Top10Response_Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Top10Response_Player.Unmarshal(m, b)
}
func (m *Top10Response_Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Top10Response_Player.Marshal(b, m, deterministic)
}
func (m *Top10Response_Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Top10Response_Player.Merge(m, src)
}
func (m *Top10Response_Player) XXX_Size() int {
	return xxx_messageInfo_Top10Response_Player.Size(m)
}
func (m *Top10Response_Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Top10Response_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Top10Response_Player proto.InternalMessageInfo

func (m *Top10Response_Player) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Top10Response_Player) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Top10Response_Player) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type GameRequest struct {
	Type                 Type     `protobuf:"varint,1,opt,name=type,proto3,enum=fight.Type" json:"type,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRequest) Reset()         { *m = GameRequest{} }
func (m *GameRequest) String() string { return proto.CompactTextString(m) }
func (*GameRequest) ProtoMessage()    {}
func (*GameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{6}
}

func (m *GameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRequest.Unmarshal(m, b)
}
func (m *GameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRequest.Marshal(b, m, deterministic)
}
func (m *GameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRequest.Merge(m, src)
}
func (m *GameRequest) XXX_Size() int {
	return xxx_messageInfo_GameRequest.Size(m)
}
func (m *GameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GameRequest proto.InternalMessageInfo

func (m *GameRequest) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_FIGHT
}

func (m *GameRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GameResponse struct {
	Type Type `protobuf:"varint,1,opt,name=type,proto3,enum=fight.Type" json:"type,omitempty"`
	// Types that are valid to be assigned to Value:
	//	*GameResponse_Fight
	//	*GameResponse_Archive
	//	*GameResponse_Level
	//	*GameResponse_Quit
	Value                isGameResponse_Value `protobuf_oneof:"value"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GameResponse) Reset()         { *m = GameResponse{} }
func (m *GameResponse) String() string { return proto.CompactTextString(m) }
func (*GameResponse) ProtoMessage()    {}
func (*GameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{7}
}

func (m *GameResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameResponse.Unmarshal(m, b)
}
func (m *GameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameResponse.Marshal(b, m, deterministic)
}
func (m *GameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameResponse.Merge(m, src)
}
func (m *GameResponse) XXX_Size() int {
	return xxx_messageInfo_GameResponse.Size(m)
}
func (m *GameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GameResponse proto.InternalMessageInfo

func (m *GameResponse) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_FIGHT
}

type isGameResponse_Value interface {
	isGameResponse_Value()
}

type GameResponse_Fight struct {
	Fight *Fight `protobuf:"bytes,2,opt,name=fight,proto3,oneof"`
}

type GameResponse_Archive struct {
	Archive *Archive `protobuf:"bytes,3,opt,name=archive,proto3,oneof"`
}

type GameResponse_Level struct {
	Level *Level `protobuf:"bytes,4,opt,name=level,proto3,oneof"`
}

type GameResponse_Quit struct {
	Quit *Quit `protobuf:"bytes,5,opt,name=quit,proto3,oneof"`
}

func (*GameResponse_Fight) isGameResponse_Value() {}

func (*GameResponse_Archive) isGameResponse_Value() {}

func (*GameResponse_Level) isGameResponse_Value() {}

func (*GameResponse_Quit) isGameResponse_Value() {}

func (m *GameResponse) GetValue() isGameResponse_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *GameResponse) GetFight() *Fight {
	if x, ok := m.GetValue().(*GameResponse_Fight); ok {
		return x.Fight
	}
	return nil
}

func (m *GameResponse) GetArchive() *Archive {
	if x, ok := m.GetValue().(*GameResponse_Archive); ok {
		return x.Archive
	}
	return nil
}

func (m *GameResponse) GetLevel() *Level {
	if x, ok := m.GetValue().(*GameResponse_Level); ok {
		return x.Level
	}
	return nil
}

func (m *GameResponse) GetQuit() *Quit {
	if x, ok := m.GetValue().(*GameResponse_Quit); ok {
		return x.Quit
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GameResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GameResponse_Fight)(nil),
		(*GameResponse_Archive)(nil),
		(*GameResponse_Level)(nil),
		(*GameResponse_Quit)(nil),
	}
}

type Fight struct {
	GameOver             bool     `protobuf:"varint,1,opt,name=game_over,json=gameOver,proto3" json:"game_over,omitempty"`
	NextLevel            bool     `protobuf:"varint,2,opt,name=next_level,json=nextLevel,proto3" json:"next_level,omitempty"`
	Score                int32    `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	HeroBlood            int32    `protobuf:"varint,4,opt,name=hero_blood,json=heroBlood,proto3" json:"hero_blood,omitempty"`
	BossBlood            int32    `protobuf:"varint,5,opt,name=boss_blood,json=bossBlood,proto3" json:"boss_blood,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fight) Reset()         { *m = Fight{} }
func (m *Fight) String() string { return proto.CompactTextString(m) }
func (*Fight) ProtoMessage()    {}
func (*Fight) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{8}
}

func (m *Fight) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fight.Unmarshal(m, b)
}
func (m *Fight) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fight.Marshal(b, m, deterministic)
}
func (m *Fight) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fight.Merge(m, src)
}
func (m *Fight) XXX_Size() int {
	return xxx_messageInfo_Fight.Size(m)
}
func (m *Fight) XXX_DiscardUnknown() {
	xxx_messageInfo_Fight.DiscardUnknown(m)
}

var xxx_messageInfo_Fight proto.InternalMessageInfo

func (m *Fight) GetGameOver() bool {
	if m != nil {
		return m.GameOver
	}
	return false
}

func (m *Fight) GetNextLevel() bool {
	if m != nil {
		return m.NextLevel
	}
	return false
}

func (m *Fight) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Fight) GetHeroBlood() int32 {
	if m != nil {
		return m.HeroBlood
	}
	return 0
}

func (m *Fight) GetBossBlood() int32 {
	if m != nil {
		return m.BossBlood
	}
	return 0
}

type Archive struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Archive) Reset()         { *m = Archive{} }
func (m *Archive) String() string { return proto.CompactTextString(m) }
func (*Archive) ProtoMessage()    {}
func (*Archive) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{9}
}

func (m *Archive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Archive.Unmarshal(m, b)
}
func (m *Archive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Archive.Marshal(b, m, deterministic)
}
func (m *Archive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Archive.Merge(m, src)
}
func (m *Archive) XXX_Size() int {
	return xxx_messageInfo_Archive.Size(m)
}
func (m *Archive) XXX_DiscardUnknown() {
	xxx_messageInfo_Archive.DiscardUnknown(m)
}

var xxx_messageInfo_Archive proto.InternalMessageInfo

func (m *Archive) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Archive) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type Level struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Session              *Session `protobuf:"bytes,2,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Level) Reset()         { *m = Level{} }
func (m *Level) String() string { return proto.CompactTextString(m) }
func (*Level) ProtoMessage()    {}
func (*Level) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{10}
}

func (m *Level) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Level.Unmarshal(m, b)
}
func (m *Level) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Level.Marshal(b, m, deterministic)
}
func (m *Level) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Level.Merge(m, src)
}
func (m *Level) XXX_Size() int {
	return xxx_messageInfo_Level.Size(m)
}
func (m *Level) XXX_DiscardUnknown() {
	xxx_messageInfo_Level.DiscardUnknown(m)
}

var xxx_messageInfo_Level proto.InternalMessageInfo

func (m *Level) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Level) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type Quit struct {
	Msg                  string   `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Quit) Reset()         { *m = Quit{} }
func (m *Quit) String() string { return proto.CompactTextString(m) }
func (*Quit) ProtoMessage()    {}
func (*Quit) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{11}
}

func (m *Quit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Quit.Unmarshal(m, b)
}
func (m *Quit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Quit.Marshal(b, m, deterministic)
}
func (m *Quit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Quit.Merge(m, src)
}
func (m *Quit) XXX_Size() int {
	return xxx_messageInfo_Quit.Size(m)
}
func (m *Quit) XXX_DiscardUnknown() {
	xxx_messageInfo_Quit.DiscardUnknown(m)
}

var xxx_messageInfo_Quit proto.InternalMessageInfo

func (m *Quit) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

type SelectHeroRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	HeroName             string   `protobuf:"bytes,2,opt,name=hero_name,json=heroName,proto3" json:"hero_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelectHeroRequest) Reset()         { *m = SelectHeroRequest{} }
func (m *SelectHeroRequest) String() string { return proto.CompactTextString(m) }
func (*SelectHeroRequest) ProtoMessage()    {}
func (*SelectHeroRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{12}
}

func (m *SelectHeroRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectHeroRequest.Unmarshal(m, b)
}
func (m *SelectHeroRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectHeroRequest.Marshal(b, m, deterministic)
}
func (m *SelectHeroRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectHeroRequest.Merge(m, src)
}
func (m *SelectHeroRequest) XXX_Size() int {
	return xxx_messageInfo_SelectHeroRequest.Size(m)
}
func (m *SelectHeroRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectHeroRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelectHeroRequest proto.InternalMessageInfo

func (m *SelectHeroRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SelectHeroRequest) GetHeroName() string {
	if m != nil {
		return m.HeroName
	}
	return ""
}

type LoadSessionRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadSessionRequest) Reset()         { *m = LoadSessionRequest{} }
func (m *LoadSessionRequest) String() string { return proto.CompactTextString(m) }
func (*LoadSessionRequest) ProtoMessage()    {}
func (*LoadSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{13}
}

func (m *LoadSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadSessionRequest.Unmarshal(m, b)
}
func (m *LoadSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadSessionRequest.Marshal(b, m, deterministic)
}
func (m *LoadSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadSessionRequest.Merge(m, src)
}
func (m *LoadSessionRequest) XXX_Size() int {
	return xxx_messageInfo_LoadSessionRequest.Size(m)
}
func (m *LoadSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadSessionRequest proto.InternalMessageInfo

func (m *LoadSessionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SessionView struct {
	Hero                 *Hero    `protobuf:"bytes,1,opt,name=hero,proto3" json:"hero,omitempty"`
	Boss                 *Boss    `protobuf:"bytes,2,opt,name=boss,proto3" json:"boss,omitempty"`
	Session              *Session `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionView) Reset()         { *m = SessionView{} }
func (m *SessionView) String() string { return proto.CompactTextString(m) }
func (*SessionView) ProtoMessage()    {}
func (*SessionView) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{14}
}

func (m *SessionView) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionView.Unmarshal(m, b)
}
func (m *SessionView) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionView.Marshal(b, m, deterministic)
}
func (m *SessionView) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionView.Merge(m, src)
}
func (m *SessionView) XXX_Size() int {
	return xxx_messageInfo_SessionView.Size(m)
}
func (m *SessionView) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionView.DiscardUnknown(m)
}

var xxx_messageInfo_SessionView proto.InternalMessageInfo

func (m *SessionView) GetHero() *Hero {
	if m != nil {
		return m.Hero
	}
	return nil
}

func (m *SessionView) GetBoss() *Boss {
	if m != nil {
		return m.Boss
	}
	return nil
}

func (m *SessionView) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type ListHerosRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListHerosRequest) Reset()         { *m = ListHerosRequest{} }
func (m *ListHerosRequest) String() string { return proto.CompactTextString(m) }
func (*ListHerosRequest) ProtoMessage()    {}
func (*ListHerosRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{15}
}

func (m *ListHerosRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListHerosRequest.Unmarshal(m, b)
}
func (m *ListHerosRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListHerosRequest.Marshal(b, m, deterministic)
}
func (m *ListHerosRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListHerosRequest.Merge(m, src)
}
func (m *ListHerosRequest) XXX_Size() int {
	return xxx_messageInfo_ListHerosRequest.Size(m)
}
func (m *ListHerosRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListHerosRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListHerosRequest proto.InternalMessageInfo

type Hero struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Details              string   `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	AttackPower          int32    `protobuf:"varint,3,opt,name=attack_power,json=attackPower,proto3" json:"attack_power,omitempty"`
	DefensePower         int32    `protobuf:"varint,4,opt,name=defense_power,json=defensePower,proto3" json:"defense_power,omitempty"`
	Blood                int32    `protobuf:"varint,5,opt,name=blood,proto3" json:"blood,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Hero) Reset()         { *m = Hero{} }
func (m *Hero) String() string { return proto.CompactTextString(m) }
func (*Hero) ProtoMessage()    {}
func (*Hero) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{16}
}

func (m *Hero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Hero.Unmarshal(m, b)
}
func (m *Hero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Hero.Marshal(b, m, deterministic)
}
func (m *Hero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Hero.Merge(m, src)
}
func (m *Hero) XXX_Size() int {
	return xxx_messageInfo_Hero.Size(m)
}
func (m *Hero) XXX_DiscardUnknown() {
	xxx_messageInfo_Hero.DiscardUnknown(m)
}

var xxx_messageInfo_Hero proto.InternalMessageInfo

func (m *Hero) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Hero) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Hero) GetAttackPower() int32 {
	if m != nil {
		return m.AttackPower
	}
	return 0
}

func (m *Hero) GetDefensePower() int32 {
	if m != nil {
		return m.DefensePower
	}
	return 0
}

func (m *Hero) GetBlood() int32 {
	if m != nil {
		return m.Blood
	}
	return 0
}

type Boss struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Details              string   `protobuf:"bytes,2,opt,name=details,proto3" json:"details,omitempty"`
	AttackPower          int32    `protobuf:"varint,3,opt,name=attack_power,json=attackPower,proto3" json:"attack_power,omitempty"`
	DefensePower         int32    `protobuf:"varint,4,opt,name=defense_power,json=defensePower,proto3" json:"defense_power,omitempty"`
	Blood                int32    `protobuf:"varint,5,opt,name=blood,proto3" json:"blood,omitempty"`
	Level                int32    `protobuf:"varint,6,opt,name=level,proto3" json:"level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Boss) Reset()         { *m = Boss{} }
func (m *Boss) String() string { return proto.CompactTextString(m) }
func (*Boss) ProtoMessage()    {}
func (*Boss) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{17}
}

func (m *Boss) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Boss.Unmarshal(m, b)
}
func (m *Boss) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Boss.Marshal(b, m, deterministic)
}
func (m *Boss) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Boss.Merge(m, src)
}
func (m *Boss) XXX_Size() int {
	return xxx_messageInfo_Boss.Size(m)
}
func (m *Boss) XXX_DiscardUnknown() {
	xxx_messageInfo_Boss.DiscardUnknown(m)
}

var xxx_messageInfo_Boss proto.InternalMessageInfo

func (m *Boss) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Boss) GetDetails() string {
	if m != nil {
		return m.Details
	}
	return ""
}

func (m *Boss) GetAttackPower() int32 {
	if m != nil {
		return m.AttackPower
	}
	return 0
}

func (m *Boss) GetDefensePower() int32 {
	if m != nil {
		return m.DefensePower
	}
	return 0
}

func (m *Boss) GetBlood() int32 {
	if m != nil {
		return m.Blood
	}
	return 0
}

func (m *Boss) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

type Session struct {
	UID                  string               `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	HeroName             string               `protobuf:"bytes,2,opt,name=hero_name,json=heroName,proto3" json:"hero_name,omitempty"`
	LiveHeroBlood        int32                `protobuf:"varint,3,opt,name=live_hero_blood,json=liveHeroBlood,proto3" json:"live_hero_blood,omitempty"`
	LiveBossBlood        int32                `protobuf:"varint,4,opt,name=live_boss_blood,json=liveBossBlood,proto3" json:"live_boss_blood,omitempty"`
	CurrentLevel         int32                `protobuf:"varint,5,opt,name=current_level,json=currentLevel,proto3" json:"current_level,omitempty"`
	Score                int32                `protobuf:"varint,6,opt,name=score,proto3" json:"score,omitempty"`
	ArchiveDate          *timestamp.Timestamp `protobuf:"bytes,7,opt,name=archive_date,json=archiveDate,proto3" json:"archive_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_475ae6b24dd70e2f, []int{18}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetUID() string {
	if m != nil {
		return m.UID
	}
	return ""
}

func (m *Session) GetHeroName() string {
	if m != nil {
		return m.HeroName
	}
	return ""
}

func (m *Session) GetLiveHeroBlood() int32 {
	if m != nil {
		return m.LiveHeroBlood
	}
	return 0
}

func (m *Session) GetLiveBossBlood() int32 {
	if m != nil {
		return m.LiveBossBlood
	}
	return 0
}

func (m *Session) GetCurrentLevel() int32 {
	if m != nil {
		return m.CurrentLevel
	}
	return 0
}

func (m *Session) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *Session) GetArchiveDate() *timestamp.Timestamp {
	if m != nil {
		return m.ArchiveDate
	}
	return nil
}

func init() {
	proto.RegisterEnum("fight.Type", Type_name, Type_value)
	proto.RegisterEnum("fight.AdminRequest_Type", AdminRequest_Type_name, AdminRequest_Type_value)
	proto.RegisterType((*ClearSessionRequest)(nil), "fight.ClearSessionRequest")
	proto.RegisterType((*ClearSessionResponse)(nil), "fight.ClearSessionResponse")
	proto.RegisterType((*AdminRequest)(nil), "fight.AdminRequest")
	proto.RegisterType((*AdminResponse)(nil), "fight.AdminResponse")
	proto.RegisterType((*Top10Request)(nil), "fight.Top10Request")
	proto.RegisterType((*Top10Response)(nil), "fight.Top10Response")
	proto.RegisterType((*Top10Response_Player)(nil), "fight.Top10Response.Player")
	proto.RegisterType((*GameRequest)(nil), "fight.GameRequest")
	proto.RegisterType((*GameResponse)(nil), "fight.GameResponse")
	proto.RegisterType((*Fight)(nil), "fight.Fight")
	proto.RegisterType((*Archive)(nil), "fight.Archive")
	proto.RegisterType((*Level)(nil), "fight.Level")
	proto.RegisterType((*Quit)(nil), "fight.Quit")
	proto.RegisterType((*SelectHeroRequest)(nil), "fight.SelectHeroRequest")
	proto.RegisterType((*LoadSessionRequest)(nil), "fight.LoadSessionRequest")
	proto.RegisterType((*SessionView)(nil), "fight.SessionView")
	proto.RegisterType((*ListHerosRequest)(nil), "fight.ListHerosRequest")
	proto.RegisterType((*Hero)(nil), "fight.Hero")
	proto.RegisterType((*Boss)(nil), "fight.Boss")
	proto.RegisterType((*Session)(nil), "fight.Session")
}

func init() { proto.RegisterFile("pd/fight/fight.proto", fileDescriptor_475ae6b24dd70e2f) }

var fileDescriptor_475ae6b24dd70e2f = []byte{
	// 993 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcf, 0x6f, 0xe2, 0x56,
	0x10, 0x8e, 0xc1, 0x8e, 0x61, 0xec, 0x64, 0xe9, 0x0b, 0x52, 0x5d, 0xa2, 0xd5, 0x26, 0xee, 0xb6,
	0x42, 0xab, 0x8a, 0xa4, 0xa4, 0xed, 0x61, 0xfb, 0x43, 0x0d, 0x81, 0x0d, 0x54, 0xa8, 0xbb, 0xeb,
	0x90, 0x1c, 0x7a, 0x41, 0x0e, 0x9e, 0x10, 0xab, 0x06, 0x7b, 0xfd, 0x0c, 0xdb, 0x5c, 0x7b, 0xab,
	0xd4, 0x53, 0x2f, 0x3d, 0xf7, 0xd6, 0xff, 0xa7, 0xff, 0x50, 0xf5, 0x7e, 0x81, 0x21, 0x28, 0xb9,
	0xee, 0x05, 0xf1, 0xbe, 0xf9, 0xde, 0xbc, 0x99, 0x79, 0xf3, 0xbd, 0x31, 0x54, 0x93, 0xe0, 0xe8,
	0x26, 0x1c, 0xdf, 0x66, 0xe2, 0xb7, 0x91, 0xa4, 0x71, 0x16, 0x13, 0x83, 0x2f, 0x6a, 0xcf, 0xc6,
	0x71, 0x3c, 0x8e, 0xf0, 0x88, 0x83, 0xd7, 0xb3, 0x9b, 0xa3, 0x2c, 0x9c, 0x20, 0xcd, 0xfc, 0x49,
	0x22, 0x78, 0xee, 0x67, 0xb0, 0x77, 0x16, 0xa1, 0x9f, 0x5e, 0x20, 0xa5, 0x61, 0x3c, 0xf5, 0xf0,
	0xdd, 0x0c, 0x69, 0x46, 0x76, 0xa1, 0x10, 0x06, 0x8e, 0x76, 0xa0, 0xd5, 0xcb, 0x5e, 0x21, 0x0c,
	0xdc, 0x3a, 0x54, 0x57, 0x69, 0x34, 0x89, 0xa7, 0x14, 0x49, 0x05, 0x8a, 0x13, 0x3a, 0x96, 0x44,
	0xf6, 0xd7, 0xfd, 0x43, 0x03, 0xfb, 0x34, 0x98, 0x84, 0x0b, 0x57, 0x87, 0x60, 0xdc, 0x62, 0x1a,
	0x53, 0x47, 0x3b, 0x28, 0xd6, 0xad, 0xa6, 0xd5, 0x10, 0x61, 0x76, 0x31, 0x8d, 0x3d, 0x61, 0x21,
	0x5f, 0x80, 0x9e, 0xdd, 0x25, 0xe8, 0x14, 0x0e, 0xb4, 0xfa, 0x6e, 0xd3, 0x91, 0x8c, 0xbc, 0x97,
	0xc6, 0xe0, 0x2e, 0x41, 0x8f, 0xb3, 0xdc, 0x3a, 0xe8, 0x6c, 0x45, 0x9e, 0x80, 0x75, 0xe6, 0x75,
	0x4e, 0x07, 0x9d, 0x61, 0xb7, 0xe3, 0xbd, 0xae, 0x6c, 0x31, 0xe0, 0xb4, 0xfd, 0xd3, 0xe5, 0xc5,
	0x40, 0x00, 0x9a, 0xdb, 0x84, 0x1d, 0xe9, 0x44, 0x86, 0xfb, 0x78, 0x2c, 0xee, 0x2e, 0xd8, 0x83,
	0x38, 0xf9, 0xf2, 0x58, 0x1e, 0xec, 0xfe, 0xa9, 0xc1, 0x8e, 0x04, 0xa4, 0x93, 0xaf, 0xc1, 0x4c,
	0x22, 0xff, 0x0e, 0x53, 0xe5, 0x66, 0x5f, 0xba, 0x59, 0xa1, 0x35, 0xde, 0x70, 0x8e, 0xa7, 0xb8,
	0xb5, 0x36, 0x6c, 0x0b, 0x68, 0xbd, 0xb8, 0xa4, 0x0a, 0x06, 0x1d, 0xc5, 0xa9, 0xc8, 0xdf, 0xf0,
	0xc4, 0x82, 0xa1, 0x11, 0xce, 0x31, 0x72, 0x8a, 0x02, 0xe5, 0x0b, 0xf7, 0x07, 0xb0, 0xce, 0xfd,
	0x09, 0xaa, 0xe2, 0x3e, 0x93, 0x95, 0xd3, 0x78, 0xe5, 0x54, 0x3e, 0xcb, 0x62, 0xc9, 0xb3, 0x0a,
	0x8b, 0x8b, 0xfc, 0x4f, 0x03, 0x5b, 0x38, 0x90, 0xd9, 0x3c, 0xea, 0xe1, 0x39, 0x88, 0x5e, 0xe2,
	0x4e, 0xac, 0xa6, 0x2d, 0x19, 0xaf, 0xd8, 0x6f, 0x77, 0xcb, 0x13, 0x46, 0xf2, 0x02, 0x4c, 0x3f,
	0x1d, 0xdd, 0x86, 0x73, 0xe4, 0xf1, 0x5a, 0xcd, 0x5d, 0x75, 0x8b, 0x02, 0xed, 0x6e, 0x79, 0x8a,
	0xc0, 0x3c, 0x8a, 0xcc, 0xf4, 0x15, 0x8f, 0x7d, 0x86, 0x31, 0x8f, 0xdc, 0x48, 0x0e, 0x41, 0x7f,
	0x37, 0x0b, 0x33, 0xc7, 0xe0, 0x24, 0x15, 0xd8, 0xdb, 0x59, 0xc8, 0x4e, 0xe5, 0xa6, 0x96, 0x09,
	0xc6, 0xdc, 0x8f, 0x66, 0xe8, 0xfe, 0xad, 0x81, 0xc1, 0x03, 0x22, 0xfb, 0x50, 0x1e, 0xfb, 0x13,
	0x1c, 0xc6, 0x73, 0x4c, 0x79, 0x4e, 0x25, 0xaf, 0xc4, 0x80, 0xd7, 0x73, 0x4c, 0xc9, 0x53, 0x80,
	0x29, 0xfe, 0x96, 0x0d, 0xc5, 0xe9, 0x05, 0x6e, 0x2d, 0x33, 0x84, 0x1f, 0xbd, 0xbc, 0x87, 0x62,
	0xfe, 0x1e, 0x9e, 0x02, 0xb0, 0xce, 0x18, 0x5e, 0x47, 0x71, 0x1c, 0xf0, 0x90, 0x0d, 0xaf, 0xcc,
	0x90, 0x16, 0x03, 0x98, 0xf9, 0x3a, 0xa6, 0x54, 0x9a, 0x0d, 0x61, 0x66, 0x08, 0x37, 0xbb, 0x2f,
	0xc1, 0x94, 0x15, 0xb8, 0xaf, 0x15, 0xb6, 0x97, 0x0a, 0x41, 0x0d, 0x17, 0x97, 0x54, 0x96, 0x48,
	0x2f, 0x70, 0xcf, 0xc0, 0x10, 0x81, 0xdd, 0xdf, 0x59, 0x07, 0x53, 0xf2, 0xe4, 0xb5, 0xa8, 0x72,
	0x2b, 0x81, 0x2a, 0xb3, 0xeb, 0x80, 0xce, 0x6a, 0xb6, 0x41, 0xa9, 0x3f, 0xc2, 0x47, 0x17, 0x18,
	0xe1, 0x28, 0xe3, 0xed, 0xbf, 0x59, 0xf8, 0xac, 0x9e, 0x3c, 0xfb, 0xa9, 0x3f, 0x41, 0x19, 0x61,
	0x89, 0x01, 0x3f, 0xfb, 0x13, 0x74, 0x9f, 0x03, 0xe9, 0xc7, 0x7e, 0xf0, 0xc8, 0xdb, 0x71, 0x07,
	0x96, 0x64, 0x5c, 0x85, 0xf8, 0x9e, 0x35, 0x1c, 0x73, 0xc0, 0x09, 0x6b, 0x12, 0xe4, 0x06, 0x46,
	0x60, 0xf5, 0x93, 0x89, 0x29, 0x42, 0x2b, 0xa6, 0xd4, 0xe3, 0x86, 0x7c, 0xf2, 0xc5, 0x87, 0x93,
	0x27, 0x50, 0xe9, 0x87, 0x94, 0x27, 0x48, 0x95, 0xa0, 0xff, 0xd2, 0x40, 0x67, 0x00, 0x21, 0xa0,
	0xf3, 0xac, 0x44, 0xa4, 0xfc, 0x3f, 0x71, 0xc0, 0x0c, 0x30, 0xf3, 0xc3, 0x88, 0xca, 0x64, 0xd5,
	0x92, 0x1c, 0x82, 0xed, 0x67, 0x99, 0x3f, 0xfa, 0x75, 0x98, 0xc4, 0xef, 0x31, 0x95, 0x3d, 0x62,
	0x09, 0xec, 0x0d, 0x83, 0xc8, 0xa7, 0xb0, 0x13, 0xe0, 0x0d, 0x4e, 0x29, 0x4a, 0x8e, 0x68, 0x16,
	0x5b, 0x82, 0x82, 0x54, 0x05, 0x23, 0xdf, 0x2a, 0x62, 0xe1, 0xfe, 0xab, 0x81, 0xce, 0x32, 0xfc,
	0x90, 0x82, 0x5a, 0xbe, 0x40, 0xdb, 0xf9, 0x17, 0xe8, 0xf7, 0x02, 0x98, 0xb2, 0xd0, 0xac, 0xa9,
	0x2e, 0x7b, 0x6d, 0xd5, 0x54, 0x97, 0xbd, 0xf6, 0x83, 0xfd, 0x42, 0x3e, 0x87, 0x27, 0x51, 0x38,
	0xc7, 0x61, 0x4e, 0x4f, 0x22, 0xe2, 0x1d, 0x06, 0x77, 0x17, 0x9a, 0x52, 0xbc, 0x9c, 0xb0, 0xf4,
	0x25, 0xaf, 0xa5, 0xc4, 0xc5, 0x72, 0x1b, 0xcd, 0xd2, 0x14, 0xa7, 0x4a, 0xd2, 0x22, 0x7c, 0x5b,
	0x82, 0x6b, 0xaa, 0xde, 0xce, 0xab, 0xfa, 0x7b, 0xb0, 0xe5, 0x73, 0x34, 0x0c, 0xfc, 0x0c, 0x1d,
	0x93, 0x37, 0x52, 0xad, 0x21, 0xe6, 0x65, 0x43, 0xcd, 0xcb, 0xc6, 0x40, 0xcd, 0x4b, 0xcf, 0x92,
	0xfc, 0xb6, 0x9f, 0xe1, 0x8b, 0x13, 0x39, 0x83, 0xca, 0x60, 0xbc, 0xea, 0x9d, 0x77, 0x07, 0x95,
	0x2d, 0x62, 0x81, 0x79, 0xea, 0x9d, 0x75, 0x7b, 0x57, 0x9d, 0x8a, 0xc6, 0xf0, 0x7e, 0xe7, 0xaa,
	0xd3, 0xaf, 0x14, 0x48, 0x09, 0xf4, 0xb7, 0x97, 0xbd, 0x41, 0xa5, 0xd8, 0xfc, 0xa7, 0x08, 0x25,
	0xfe, 0x4a, 0x5d, 0xcc, 0x47, 0xe4, 0x04, 0xca, 0x8b, 0xd6, 0x24, 0x1f, 0xab, 0x27, 0x70, 0xad,
	0x59, 0x6b, 0x79, 0x79, 0x1c, 0x6b, 0xe4, 0x3b, 0xb0, 0x72, 0x82, 0x23, 0x9f, 0xa8, 0x6d, 0xf7,
	0x44, 0x58, 0x23, 0xab, 0x92, 0xe0, 0xca, 0x7b, 0x09, 0xb0, 0x14, 0x3c, 0x71, 0x16, 0x8c, 0xb5,
	0x37, 0x60, 0xe3, 0xde, 0x23, 0xd0, 0xd9, 0xd8, 0x20, 0xca, 0x96, 0x1b, 0x42, 0xb5, 0xbd, 0x15,
	0x4c, 0xce, 0x95, 0x73, 0xb0, 0xf3, 0x5f, 0x0c, 0xa4, 0x26, 0x49, 0x1b, 0xbe, 0x36, 0x6a, 0xfb,
	0x1b, 0x6d, 0xd2, 0xd1, 0x57, 0x60, 0xf0, 0xc1, 0x4a, 0xf6, 0x56, 0xc7, 0xac, 0xd8, 0x5a, 0xdd,
	0x34, 0x7b, 0x8f, 0x35, 0xf2, 0x0d, 0x18, 0x7c, 0xf4, 0x2f, 0x76, 0xe5, 0xbf, 0x26, 0x16, 0xbb,
	0x56, 0xbe, 0x0e, 0xea, 0xda, 0xb1, 0xd6, 0x2a, 0xff, 0x62, 0x36, 0xbe, 0xe5, 0xc6, 0xeb, 0x6d,
	0xde, 0x04, 0x27, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff, 0x06, 0x72, 0xd5, 0x5b, 0x61, 0x09, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FightSvcClient is the client API for FightSvc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FightSvcClient interface {
	// here stream is used to trans a big mount of data.
	ListHeros(ctx context.Context, in *ListHerosRequest, opts ...grpc.CallOption) (FightSvc_ListHerosClient, error)
	LoadSession(ctx context.Context, in *LoadSessionRequest, opts ...grpc.CallOption) (*SessionView, error)
	SelectHero(ctx context.Context, in *SelectHeroRequest, opts ...grpc.CallOption) (*SessionView, error)
	Game(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*GameResponse, error)
	ClearSession(ctx context.Context, in *ClearSessionRequest, opts ...grpc.CallOption) (*ClearSessionResponse, error)
	// here stream is used to keep the long-alive connection and get real top10
	Top10(ctx context.Context, in *Top10Request, opts ...grpc.CallOption) (FightSvc_Top10Client, error)
	Admin(ctx context.Context, opts ...grpc.CallOption) (FightSvc_AdminClient, error)
}

type fightSvcClient struct {
	cc *grpc.ClientConn
}

func NewFightSvcClient(cc *grpc.ClientConn) FightSvcClient {
	return &fightSvcClient{cc}
}

func (c *fightSvcClient) ListHeros(ctx context.Context, in *ListHerosRequest, opts ...grpc.CallOption) (FightSvc_ListHerosClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FightSvc_serviceDesc.Streams[0], "/fight.FightSvc/ListHeros", opts...)
	if err != nil {
		return nil, err
	}
	x := &fightSvcListHerosClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FightSvc_ListHerosClient interface {
	Recv() (*Hero, error)
	grpc.ClientStream
}

type fightSvcListHerosClient struct {
	grpc.ClientStream
}

func (x *fightSvcListHerosClient) Recv() (*Hero, error) {
	m := new(Hero)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fightSvcClient) LoadSession(ctx context.Context, in *LoadSessionRequest, opts ...grpc.CallOption) (*SessionView, error) {
	out := new(SessionView)
	err := c.cc.Invoke(ctx, "/fight.FightSvc/LoadSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fightSvcClient) SelectHero(ctx context.Context, in *SelectHeroRequest, opts ...grpc.CallOption) (*SessionView, error) {
	out := new(SessionView)
	err := c.cc.Invoke(ctx, "/fight.FightSvc/SelectHero", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fightSvcClient) Game(ctx context.Context, in *GameRequest, opts ...grpc.CallOption) (*GameResponse, error) {
	out := new(GameResponse)
	err := c.cc.Invoke(ctx, "/fight.FightSvc/Game", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fightSvcClient) ClearSession(ctx context.Context, in *ClearSessionRequest, opts ...grpc.CallOption) (*ClearSessionResponse, error) {
	out := new(ClearSessionResponse)
	err := c.cc.Invoke(ctx, "/fight.FightSvc/ClearSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fightSvcClient) Top10(ctx context.Context, in *Top10Request, opts ...grpc.CallOption) (FightSvc_Top10Client, error) {
	stream, err := c.cc.NewStream(ctx, &_FightSvc_serviceDesc.Streams[1], "/fight.FightSvc/Top10", opts...)
	if err != nil {
		return nil, err
	}
	x := &fightSvcTop10Client{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FightSvc_Top10Client interface {
	Recv() (*Top10Response, error)
	grpc.ClientStream
}

type fightSvcTop10Client struct {
	grpc.ClientStream
}

func (x *fightSvcTop10Client) Recv() (*Top10Response, error) {
	m := new(Top10Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fightSvcClient) Admin(ctx context.Context, opts ...grpc.CallOption) (FightSvc_AdminClient, error) {
	stream, err := c.cc.NewStream(ctx, &_FightSvc_serviceDesc.Streams[2], "/fight.FightSvc/Admin", opts...)
	if err != nil {
		return nil, err
	}
	x := &fightSvcAdminClient{stream}
	return x, nil
}

type FightSvc_AdminClient interface {
	Send(*AdminRequest) error
	Recv() (*AdminResponse, error)
	grpc.ClientStream
}

type fightSvcAdminClient struct {
	grpc.ClientStream
}

func (x *fightSvcAdminClient) Send(m *AdminRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *fightSvcAdminClient) Recv() (*AdminResponse, error) {
	m := new(AdminResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// FightSvcServer is the server API for FightSvc service.
type FightSvcServer interface {
	// here stream is used to trans a big mount of data.
	ListHeros(*ListHerosRequest, FightSvc_ListHerosServer) error
	LoadSession(context.Context, *LoadSessionRequest) (*SessionView, error)
	SelectHero(context.Context, *SelectHeroRequest) (*SessionView, error)
	Game(context.Context, *GameRequest) (*GameResponse, error)
	ClearSession(context.Context, *ClearSessionRequest) (*ClearSessionResponse, error)
	// here stream is used to keep the long-alive connection and get real top10
	Top10(*Top10Request, FightSvc_Top10Server) error
	Admin(FightSvc_AdminServer) error
}

// UnimplementedFightSvcServer can be embedded to have forward compatible implementations.
type UnimplementedFightSvcServer struct {
}

func (*UnimplementedFightSvcServer) ListHeros(req *ListHerosRequest, srv FightSvc_ListHerosServer) error {
	return status.Errorf(codes.Unimplemented, "method ListHeros not implemented")
}
func (*UnimplementedFightSvcServer) LoadSession(ctx context.Context, req *LoadSessionRequest) (*SessionView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoadSession not implemented")
}
func (*UnimplementedFightSvcServer) SelectHero(ctx context.Context, req *SelectHeroRequest) (*SessionView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SelectHero not implemented")
}
func (*UnimplementedFightSvcServer) Game(ctx context.Context, req *GameRequest) (*GameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Game not implemented")
}
func (*UnimplementedFightSvcServer) ClearSession(ctx context.Context, req *ClearSessionRequest) (*ClearSessionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearSession not implemented")
}
func (*UnimplementedFightSvcServer) Top10(req *Top10Request, srv FightSvc_Top10Server) error {
	return status.Errorf(codes.Unimplemented, "method Top10 not implemented")
}
func (*UnimplementedFightSvcServer) Admin(srv FightSvc_AdminServer) error {
	return status.Errorf(codes.Unimplemented, "method Admin not implemented")
}

func RegisterFightSvcServer(s *grpc.Server, srv FightSvcServer) {
	s.RegisterService(&_FightSvc_serviceDesc, srv)
}

func _FightSvc_ListHeros_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListHerosRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FightSvcServer).ListHeros(m, &fightSvcListHerosServer{stream})
}

type FightSvc_ListHerosServer interface {
	Send(*Hero) error
	grpc.ServerStream
}

type fightSvcListHerosServer struct {
	grpc.ServerStream
}

func (x *fightSvcListHerosServer) Send(m *Hero) error {
	return x.ServerStream.SendMsg(m)
}

func _FightSvc_LoadSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FightSvcServer).LoadSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fight.FightSvc/LoadSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FightSvcServer).LoadSession(ctx, req.(*LoadSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FightSvc_SelectHero_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectHeroRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FightSvcServer).SelectHero(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fight.FightSvc/SelectHero",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FightSvcServer).SelectHero(ctx, req.(*SelectHeroRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FightSvc_Game_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FightSvcServer).Game(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fight.FightSvc/Game",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FightSvcServer).Game(ctx, req.(*GameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FightSvc_ClearSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClearSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FightSvcServer).ClearSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fight.FightSvc/ClearSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FightSvcServer).ClearSession(ctx, req.(*ClearSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FightSvc_Top10_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Top10Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FightSvcServer).Top10(m, &fightSvcTop10Server{stream})
}

type FightSvc_Top10Server interface {
	Send(*Top10Response) error
	grpc.ServerStream
}

type fightSvcTop10Server struct {
	grpc.ServerStream
}

func (x *fightSvcTop10Server) Send(m *Top10Response) error {
	return x.ServerStream.SendMsg(m)
}

func _FightSvc_Admin_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(FightSvcServer).Admin(&fightSvcAdminServer{stream})
}

type FightSvc_AdminServer interface {
	Send(*AdminResponse) error
	Recv() (*AdminRequest, error)
	grpc.ServerStream
}

type fightSvcAdminServer struct {
	grpc.ServerStream
}

func (x *fightSvcAdminServer) Send(m *AdminResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *fightSvcAdminServer) Recv() (*AdminRequest, error) {
	m := new(AdminRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _FightSvc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fight.FightSvc",
	HandlerType: (*FightSvcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LoadSession",
			Handler:    _FightSvc_LoadSession_Handler,
		},
		{
			MethodName: "SelectHero",
			Handler:    _FightSvc_SelectHero_Handler,
		},
		{
			MethodName: "Game",
			Handler:    _FightSvc_Game_Handler,
		},
		{
			MethodName: "ClearSession",
			Handler:    _FightSvc_ClearSession_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListHeros",
			Handler:       _FightSvc_ListHeros_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Top10",
			Handler:       _FightSvc_Top10_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Admin",
			Handler:       _FightSvc_Admin_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "pd/fight/fight.proto",
}
